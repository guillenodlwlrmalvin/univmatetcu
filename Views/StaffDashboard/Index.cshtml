@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
@model UnivMate.ViewModels.StaffDashboardViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Admin Dashboard";
}
<div class="modal fade" id="completeReportModal" tabindex="-1" aria-labelledby="completeReportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="completeReportModalLabel">Complete Report</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="completeReportForm" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="reportIdToComplete" name="reportId" value="">

                    <div class="mb-3">
                        <label for="completionNotes" class="form-label">Completion Notes <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="completionNotes" name="completionNotes" rows="4" placeholder="Add any notes about how the issue was resolved..." required></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="completionImage" class="form-label">Upload Completion Image <span class="text-danger">*</span></label>
                        <input type="file" class="form-control" id="completionImage" name="completionImage" accept="image/*" required>
                        <small class="text-muted">Maximum file size: 5MB</small>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-check-circle me-1"></i> Mark as Completed
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="admin-dashboard">
    <!-- Header Bar -->
    <header class="admin-header">
        <div class="header-content">
            <h1 class="auth-logo">
                @{
                    string[] extensions = { ".png", ".jpg", ".svg" };
                    string logoPath = "images/logo";
                    string logoUrl = null;

                    foreach (string extension in extensions)
                    {
                        if (System.IO.File.Exists(env.WebRootPath + "/" + logoPath + extension))
                        {
                            logoUrl = "/" + logoPath + extension;
                            break;
                        }
                    }

                    if (logoUrl != null)
                    {
                        <img src="@logoUrl" alt="TCU Jobs Logo" style="max-height: 120px;">
                    }
                    else
                    {
                        <p>No logo found.</p>
                    }
                }
            </h1>

            <h1 class="dashboard-title">
                <i class="fas fa-tachometer-alt"></i> Admin Dashboard
            </h1>
           
            <a href="@Url.Action("ManageUsers", "StaffDashboard")" class="btn-manage-users">
                <i class="fas fa-user-cog"></i> Manage Users
            </a>
            <a href="@Url.Action("UserDashboard", "Dashboard")" class="btn-user-dashboard">
                <i class="fas fa-user"></i> View User Dashboard
            </a>
            <form asp-controller="Account" asp-action="Logout" method="post" class="logout-form">
                <button type="submit" class="btn-logout" title="Logout">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Sign Out</span>
                </button>
            </form>
        </div>
       
    </header>
  
    <!-- Notification System -->
    <div class="notification-container">
        @if (TempData["StatusMessage"] != null)
        {
            <div class="notification success">
                <i class="fas fa-check-circle"></i>
                <span>@TempData["StatusMessage"]</span>
                <button class="notification-close">&times;</button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="notification error">
                <i class="fas fa-exclamation-circle"></i>
                <span>@TempData["ErrorMessage"]</span>
                <button class="notification-close">&times;</button>
            </div>
        }
    </div>

    <!-- Key Metrics -->
    <section class="metrics-section">
        <h2 class="section-title">
            <i class="fas fa-chart-line"></i> Overview
        </h2>
        <div class="metrics-grid">
            <!-- Add this card to your metrics-grid -->
            <div class="metric-card">
                <div class="metric-icon logo-metric">
                    <i class="fas fa-image"></i>
                </div>
                <div class="metric-content">
                    <h3>Logo</h3>
                    <div class="metric-value">Current</div>
                    <button class="btn btn-sm btn-outline-primary mt-2" data-bs-toggle="modal"
                            data-bs-target="#logoManagementModal">
                        Change Logo
                    </button>
                </div>
            </div>
            <div class="metric-card">
               
                <div class="metric-icon user-metric">
                    <i class="fas fa-users"></i>
                </div>
                <div class="metric-content">
                    <h3>Total Users</h3>
                    <div class="metric-value total-users-count">@Model.TotalUsers</div>
                    <div class="metric-trend">
                        <i class="fas fa-arrow-up"></i>
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon student-metric">
                    <i class="fas fa-graduation-cap"></i>
                </div>
                <div class="metric-content">
                    <h3>Students</h3>
                    <div class="metric-value total-students-count">@Model.TotalStudents</div>
                    <div class="metric-trend">
                        <i class="fas fa-arrow-up"></i> 
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon professor-metric">
                    <i class="fas fa-chalkboard-teacher"></i>
                </div>
                <div class="metric-content">
                    <h3>Professors</h3>
                    <div class="metric-value total-professors-count">@Model.TotalProfessors</div>
                    <div class="metric-trend">
                        <i class="fas fa-arrow-up"></i> 
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon report-metric">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div class="metric-content">
                    <h3>Pending Reports</h3>
                    <div class="metric-value pending-reports-count">@Model.PendingReports</div>
                    <div class="metric-trend">
                        <i class="fas fa-arrow-down"></i> 
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Unresponded Reports Warning -->
    @if (Model.UnrespondedReportsCount > 0)
    {
        <section class="alert-section">
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <div class="d-flex align-items-center">
                    <i class="fas fa-exclamation-triangle me-3 fs-4"></i>
                    <div>
                        <h4 class="alert-heading mb-1">Attention Needed!</h4>
                        <p class="mb-0">There are @Model.UnrespondedReportsCount reports that haven't received any admin response.</p>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </section>

        <style>
            .alert-section {
                margin-bottom: 2rem;
            }

            .alert-warning {
                border-left: 5px solid #ffc107;
                border-radius: var(--border-radius);
            }
        </style>
    }

    <!-- Reports Management -->
    <section class="reports-section">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-clipboard-list"></i> Reports Management
            </h2>
            <div class="report-filters">
                <div class="filter-group">
                    <label>Filter by Status:</label>
                    <div class="filter-options">
                        <button class="filter-btn active" data-status="all">All</button>
                        <button class="filter-btn" data-status="pending">Pending</button>
                        <button class="filter-btn" data-status="in progress">In Progress</button>
                        <button class="filter-btn" data-status="completed">Completed</button>
                        <button class="filter-btn" data-status="rejected">Rejected</button>
                    </div>
                </div>
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search reports...">
                </div>
            </div>
        </div>

        <div class="reports-table-container">
            <table class="reports-table">
                <thead>

                    <tr>
                        <th>Report Title</th>
                        <th>Submitted By</th>
                        <th>Date Submitted</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var report in Model.Reports)
                    {
                        var daysOld = (DateTime.Now - report.SubmittedAt).TotalDays;
                        var warningClass = "";

                        if (report.Status != "Completed" && report.Status != "Rejected")
                        {
                            if (daysOld >= 30)
                            {
                                warningClass = "report-warning-1month";
                            }
                            else if (daysOld >= 14)
                            {
                                warningClass = "report-warning-2weeks";
                            }
                            else if (daysOld >= 7)
                            {
                                warningClass = "report-warning-1week";
                            }
                        }


                       <tr data-status="@report.Status.ToLower()" 
        class="@warningClass @(report.Comments.Count == 0 && report.Status != "Completed" ? "unresponded-report" : "")">
                            <td>
                                <div class="report-title">@report.Title</div>
                                <div class="report-location">@report.Location</div>
                            </td>
                            <td>
                                <div class="user-display">
                                    <div class="user-avatar-sm">
                                        @report.User?.FirstName?.Substring(0, 1)@report.User?.LastName?.Substring(0, 1)
                                    </div>
                                    <div>
                                        <div class="user-name">@report.User?.FirstName @report.User?.LastName</div>
                                        <div class="user-email">@report.User?.Email</div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="date-display">
                                    <div class="date-day">@report.SubmittedAt.ToString("MMM dd")</div>
                                    <div class="date-time">@report.SubmittedAt.ToString("h:mm tt")</div>
                                </div>
                            </td>
                            <td>
                                <span class="status-badge @report.Status.ToLower().Replace(" ", "-")">
                                    <i class="status-icon @GetStatusIcon(report.Status)"></i>
                                    @report.Status
                                    @if (warningClass != "")
                                    {
                                        <span class="report-age-warning">
                                            (@Math.Floor(daysOld) days)
                                        </span>
                                    }
                                </span>
                            </td>

                            <td>
                                <div class="action-buttons">
                                    <a asp-action="ViewReport" asp-route-id="@report.Id" class="btn-action view-btn" title="View Details">
                                        <i class="fas fa-eye"></i>
                                        <span class="action-text">View</span>
                                    </a>
                                    @if (report.Status == "Pending")
                                    {
                                        <form asp-action="QuickAction" method="post" class="action-form">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="reportId" value="@report.Id" />
                                            <button type="submit" name="action" value="accept" class="btn-action accept-btn" title="Accept Report">
                                                <i class="fas fa-check"></i>
                                                <span class="action-text">Accept</span>
                                            </button>
                                            <button type="submit" name="action" value="reject" class="btn-action reject-btn" title="Reject Report">
                                                <i class="fas fa-times"></i>
                                                <span class="action-text">Reject</span>
                                            </button>
                                        </form>
                                    }
                                    else if (report.Status == "In Progress")
                                    {
                                        <button type="button" class="btn-action complete-btn" title="Mark Complete"
                                                data-bs-toggle="modal" data-bs-target="#completeReportModal"
                                                data-report-id="@report.Id">
                                            <i class="fas fa-check-circle"></i>
                                            <span class="action-text">Complete</span>
                                        </button>
                                    }
                                    @if (report.Status == "Completed" || report.Status == "Rejected")
                                    {
                                        <form asp-action="DeleteReport" method="post" class="action-form delete-form">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="reportId" value="@report.Id" />
                                            <button type="submit" class="btn-action delete-btn" title="Delete Report">
                                                <i class="fas fa-trash-alt"></i>
                                                <span class="action-text">Delete</span>
                                            </button>
                                        </form>
                                    }
                                </div>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>
    <!-- Recent Users -->
    <section class="users-section">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-user-clock"></i> Recent User Activity
            </h2>
            <div class="user-search-container">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="user-search" placeholder="Search users...">
                </div>
               
            </div>
        </div>

        <div class="users-grid">
            @foreach (var user in Model.RecentUsers)
            {
                <div class="user-card" data-search="@($"{user.FirstName} {user.LastName} {user.Email} {user.Role}".ToLower())">
                    <div class="user-avatar">
                        @user.FirstName?.Substring(0, 1)@user.LastName?.Substring(0, 1)
                    </div>
                    <div class="user-details">
                        <h3 class="user-name">@user.FirstName @user.LastName</h3>
                        <div class="user-meta">
                            <span class="user-role @user.Role.ToLower()">@user.Role</span>
                            <span class="user-email">@user.Email</span>
                        </div>
                        <div class="user-joined">
                            Joined @user.CreatedAt.ToString("MMM d, yyyy")
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
</div>
<!-- Add this modal at the bottom of your page (with other modals) -->
<div class="modal fade" id="logoManagementModal" tabindex="-1" aria-labelledby="logoManagementModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="logoManagementModalLabel">Logo Management</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="logoUploadForm" method="post" enctype="multipart/form-data"
                  asp-action="UploadLogo" asp-controller="StaffDashboard">
                <div class="modal-body">
                    @Html.AntiForgeryToken()

                    <div class="current-logo mb-4 text-center">
                        <h6>Current Logo</h6>
                        <img src="@Url.Content("~/images/logo.png")" id="currentLogoPreview"
                             class="img-fluid mb-2" style="max-height: 150px;">
                        <p class="text-muted small">Displayed on login/register pages</p>
                    </div>

                    <div class="mb-3">
                        <label for="logoFile" class="form-label">Upload New Logo</label>
                        <input type="file" class="form-control" id="logoFile" name="logoFile"
                               accept="image/png, image/jpeg, image/svg+xml" required>
                        <div class="form-text">
                            Recommended size: 300x100px (PNG, JPG, or SVG)
                        </div>
                    </div>

                    <div class="logo-preview mt-3 text-center d-none">
                        <h6>New Logo Preview</h6>
                        <img id="logoPreview" class="img-fluid mb-2" style="max-height: 150px;">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-upload me-1"></i> Upload Logo
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@functions {
    public string GetStatusIcon(string status)
    {
        switch (status.ToLower())
        {
            case "pending": return "fas fa-hourglass-half";
            case "in progress": return "fas fa-spinner";
            case "completed": return "fas fa-check-circle";
            case "rejected": return "fas fa-times-circle";
            default: return "fas fa-question-circle";
        }
    }
}

<style>
    /* ===== Base Styles ===== */
    :root {
        --primary: #780000;
        --primary-light: #a30000;
        --primary-lightest: #f8e8e8;
        --success: #28a745;
        --success-light: #e6f3ea;
        --warning: #ffc107;
        --warning-light: #fff8e6;
        --danger: #dc3545;
        --danger-light: #fce8ea;
        --info: #17a2b8;
        --info-light: #e6f4f7;
        --dark: #343a40;
        --gray-dark: #495057;
        --gray: #6c757d;
        --gray-light: #e9ecef;
        --gray-lightest: #f8f9fa;
        --white: #ffffff;
        --border-radius: 8px;
        --border-radius-sm: 4px;
        --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        --shadow-md: 0 10px 15px rgba(0, 0, 0, 0.1);
        --transition: all 0.2s ease;
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: 'Segoe UI', 'Roboto', sans-serif;
        line-height: 1.6;
        color: var(--dark);
        background-color: #f5f7fa;
    }
    /* Add to your existing CSS */
    .header-left {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .btn-user-dashboard {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background-color: var(--primary);
        color: var(--white);
        border-radius: var(--border-radius);
        font-weight: 500;
        text-decoration: none;
        transition: var(--transition);
        font-size: 0.9rem;
    }

        .btn-user-dashboard:hover {
            background-color: var(--primary-light);
            color: var(--white);
        }

    .media (max-width: 768px) {
        .btn-user-dashboard span

    {
        display: none;
    }

    .btn-user-dashboard i {
        margin-right: 0;
    }

    }
    /* ===== Dashboard Layout ===== */
    .admin-dashboard {
        max-width: 1600px;
        margin: 0 auto;
        padding: 0 1.5rem 2rem;
    }

    /* ===== Header Styles ===== */
    .admin-header {
        background-color: var(--white);
        box-shadow: var(--shadow-sm);
        padding: 1rem 0;
        margin-bottom: 1.5rem;
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1600px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    .dashboard-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--primary);
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .dashboard-title i {
            font-size: 1.2em;
        }

    /* Header Right Section */
    .header-right {
        display: flex;
        align-items: center;
        gap: 1rem;
    }


    /* Manage Users Button */
    .btn-manage-users {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background-color: var(--primary);
        color: var(--white);
        border-radius: var(--border-radius);
        font-weight: 500;
        text-decoration: none;
        transition: var(--transition);
        font-size: 0.9rem;
    }

        .btn-manage-users:hover {
            background-color: var(--primary-light);
            color: var(--white);
        }

    /* Responsive adjustments */
    .media (max-width: 992px) {
        .header-content

    {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .header-right {
        width: 100%;
        justify-content: space-between;
    }

    }

    .media (max-width: 768px) {
        .btn-manage-users span, .btn-user-dashboard span

    {
        display: none;
    }

    .btn-manage-users i,
    .btn-user-dashboard i {
        margin-right: 0;
    }

    }

    .media (max-width: 576px) {
        .header-right

    {
        gap: 0.5rem;
    }

    .btn-manage-users,
    .btn-user-dashboard {
        padding: 0.5rem;
    }

    }
    /* Add to your existing CSS */
    .logo-metric {
        background-color: #6f42c1;
        background-image: linear-gradient(135deg, #6f42c1, #9b59b6);
    }

    .logo-preview img {
        max-width: 100%;
        border: 1px solid #dee2e6;
        border-radius: 4px;
    }
    /* Add to your existing CSS */
    .modal-content {
        border-radius: var(--border-radius);
        border: none;
        box-shadow: var(--shadow-md);
    }

    .modal-header {
        border-radius: var(--border-radius) var(--border-radius) 0 0;
        padding: 1.25rem;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        border-top: 1px solid var(--gray-light);
        padding: 1rem 1.5rem;
    }

    .btn-close-white {
        filter: invert(1) grayscale(100%) brightness(200%);
    }

    /* Add to your existing CSS */
    .report-warning-1week {
        background-color: #fff8e6 !important;
        border-left: 4px solid #ffc107;
    }

    .report-warning-2weeks {
        background-color: #ffe8cc !important;
        border-left: 4px solid #ff9800;
    }

    .report-warning-1month {
        background-color: #ffebee !important;
        border-left: 4px solid #f44336;
    }

    .report-warning-1week:hover {
        background-color: #fff2cc !important;
    }

    .report-warning-2weeks:hover {
        background-color: #ffd8a3 !important;
    }

    .report-warning-1month:hover {
        background-color: #ffcdd2 !important;
    }

    .report-age-warning {
        font-size: 0.75em;
        margin-left: 0.5em;
        opacity: 0.8;
    }

    .status-badge.pending .report-age-warning {
        color: #856404;
    }

    .status-badge.in-progress .report-age-warning {
        color: #0c5460;
    }

    /* ===== Logout Button ===== */
    .logout-form {
        display: flex;
    }

    .btn-logout {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background-color: var(--white);
        color: var(--danger);
        border: 1px solid var(--danger);
        border-radius: var(--border-radius);
        font-weight: 500;
        cursor: pointer;
        transition: var(--transition);
    }

        .btn-logout:hover {
            background-color: var(--danger);
            color: var(--white);
        }

        .btn-logout i {
            font-size: 1em;
        }

    .unresponded-report {
        background-color: #fff8e6 !important;
        border-left: 4px solid #ffc107;
    }

        .unresponded-report:hover {
            background-color: #fff2cc !important;
        }

    .delete-btn {
        background-color: var(--danger);
    }

        .delete-btn:hover {
            background-color: #c82333;
        }
    /* ===== Notification System ===== */
    .notification-container {
        position: fixed;
        top: 5rem;
        right: 2rem;
        z-index: 1050;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        max-width: 400px;
    }

    .notification {
        padding: 1rem 1.25rem;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-md);
        display: flex;
        align-items: center;
        gap: 0.75rem;
        animation: slideIn 0.3s ease-out;
        position: relative;
        overflow: hidden;
    }

        .notification::after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 4px;
        }

        .notification.success {
            background-color: var(--white);
            border-left: 4px solid var(--success);
        }

        .notification.error {
            background-color: var(--white);
            border-left: 4px solid var(--danger);
        }

        .notification i {
            font-size: 1.2rem;
        }

        .notification.success i {
            color: var(--success);
        }

        .notification.error i {
            color: var(--danger);
        }

        .notification span {
            flex: 1;
        }

    .notification-close {
        background: none;
        border: none;
        color: var(--gray);
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0 0.25rem;
        margin-left: 0.5rem;
    }

    keyframes slideIn {
        from

    {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }

    /* ===== Section Styles ===== */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .section-title {
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--dark);
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .section-title i {
            color: var(--primary);
            font-size: 1.1em;
        }

    .view-all {
        color: var(--primary);
        font-weight: 500;
        text-decoration: none;
        transition: var(--transition);
    }

        .view-all:hover {
            text-decoration: underline;
        }

    /* ===== Metrics Section ===== */
    .metrics-section {
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow);
    }

    .metrics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 1.5rem;
    }

    .metric-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1.25rem;
        transition: var(--transition);
        border: 1px solid var(--gray-light);
    }

        .metric-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

    .metric-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: var(--white);
    }

    .user-metric {
        background-color: var(--primary);
        background-image: linear-gradient(135deg, var(--primary), var(--primary-light));
    }

    .student-metric {
        background-color: var(--success);
        background-image: linear-gradient(135deg, var(--success), #5cb85c);
    }

    .professor-metric {
        background-color: var(--info);
        background-image: linear-gradient(135deg, var(--info), #5bc0de);
    }

    .report-metric {
        background-color: var(--warning);
        background-image: linear-gradient(135deg, var(--warning), #f0ad4e);
    }

    .metric-content {
        flex: 1;
    }

        .metric-content h3 {
            font-size: 1rem;
            font-weight: 500;
            color: var(--gray);
            margin-bottom: 0.25rem;
        }

    .metric-value {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.25rem;
    }

    .metric-trend {
        font-size: 0.85rem;
        color: var(--gray);
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

        .metric-trend i {
            font-size: 0.8em;
            color: var(--success);
        }
    /* Add to your CSS */
    #currentLogoPreview, #logoPreview {
        max-width: 100%;
        height: auto;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        background-color: #f8f9fa;
        padding: 5px;
    }

    .logo-preview {
        transition: all 0.3s ease;
    }
    /* ===== Reports Section ===== */
    .reports-section {
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow);
    }

    .report-filters {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        flex-wrap: wrap;
    }

    .filter-group {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .filter-group label {
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--gray-dark);
        }

    .filter-options {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .filter-btn {
        padding: 0.5rem 1rem;
        background-color: var(--gray-lightest);
        border: 1px solid var(--gray-light);
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        color: var(--gray-dark);
        cursor: pointer;
        transition: var(--transition);
    }

        .filter-btn:hover {
            background-color: var(--gray-light);
        }

        .filter-btn.active {
            background-color: var(--primary);
            border-color: var(--primary);
            color: var(--white);
        }

    .search-box {
        position: relative;
        flex: 1;
        min-width: 200px;
        max-width: 300px;
    }

        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        .search-box input {
            width: 100%;
            padding: 0.5rem 1rem 0.5rem 2.5rem;
            border: 1px solid var(--gray-light);
            border-radius: 20px;
            font-size: 0.9rem;
            transition: var(--transition);
        }

            .search-box input:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(120, 0, 0, 0.1);
            }



    /* ===== Reports Table ===== */
    .reports-table-container {
        overflow-x: auto;
        margin-top: 1.5rem;
        border-radius: var(--border-radius);
        border: 1px solid var(--gray-light);
    }

    .reports-table {
        width: 100%;
        border-collapse: collapse;
        min-width: 800px;
    }

        .reports-table th {
            text-align: left;
            padding: 1rem;
            background-color: var(--gray-lightest);
            font-weight: 600;
            color: var(--dark);
            border-bottom: 1px solid var(--gray-light);
        }

        .reports-table td {
            padding: 1rem;
            border-bottom: 1px solid var(--gray-light);
            vertical-align: middle;
        }

        .reports-table tr:last-child td {
            border-bottom: none;
        }

        .reports-table tr:hover {
            background-color: var(--primary-lightest);
        }

    .report-title {
        font-weight: 500;
        color: var(--dark);
    }

    .report-location {
        font-size: 0.85rem;
        color: var(--gray);
        margin-top: 0.25rem;
    }

    .user-display {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .user-avatar-sm {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: var(--primary);
        color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        flex-shrink: 0;
    }

    .user-name {
        font-weight: 500;
    }

    .user-email {
        font-size: 0.85rem;
        color: var(--gray);
    }

    .date-display {
        display: flex;
        flex-direction: column;
    }

    .date-day {
        font-weight: 500;
    }

    .date-time {
        font-size: 0.85rem;
        color: var(--gray);
    }

    /* ===== Status Badges ===== */
    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-icon {
        font-size: 0.9em;
    }

    .status-badge.pending {
        background-color: var(--warning-light);
        color: #856404;
    }

        .status-badge.pending .status-icon {
            color: var(--warning);
        }

    .status-badge.in-progress {
        background-color: var(--info-light);
        color: #0c5460;
    }

        .status-badge.in-progress .status-icon {
            color: var(--info);
        }

    .status-badge.completed {
        background-color: var(--success-light);
        color: #155724;
    }

        .status-badge.completed .status-icon {
            color: var(--success);
        }

    .status-badge.rejected {
        background-color: var(--danger-light);
        color: #721c24;
    }

        .status-badge.rejected .status-icon {
            color: var(--danger);
        }

    /* ===== Action Buttons ===== */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .action-form {
        display: flex;
        gap: 0.5rem;
    }

    .btn-action {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        border-radius: var(--border-radius-sm);
        border: none;
        cursor: pointer;
        transition: var(--transition);
        color: var(--white);
        font-size: 0.85rem;
        font-weight: 500;
    }

    .action-text {
        display: inline-block;
    }

    .view-btn {
        background-color: var(--gray);
    }

        .view-btn:hover {
            background-color: var(--gray-dark);
        }

    .accept-btn {
        background-color: var(--success);
    }

        .accept-btn:hover {
            background-color: #218838;
        }

    .reject-btn {
        background-color: var(--danger);
    }

        .reject-btn:hover {
            background-color: #c82333;
        }

    .complete-btn {
        background-color: var(--info);
    }

        .complete-btn:hover {
            background-color: #138496;
        }

    /* ===== Users Section ===== */
    .users-section {
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        box-shadow: var(--shadow);
    }

    .users-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
    }

    .user-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 1.25rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: var(--transition);
        border: 1px solid var(--gray-light);
    }

        .user-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow);
        }

    .user-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: var(--primary);
        color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        flex-shrink: 0;
    }

    .user-details {
        flex: 1;
    }

    .user-name {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .user-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .user-role {
        padding: 0.25rem 0.5rem;
        border-radius: var(--border-radius-sm);
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
    }

        .user-role.student {
            background-color: rgba(40, 167, 69, 0.1);
            color: var(--success);
        }

        .user-role.professor {
            background-color: rgba(23, 162, 184, 0.1);
            color: var(--info);
        }

        .user-role.admin, .user-role.staff {
            background-color: rgba(120, 0, 0, 0.1);
            color: var(--primary);
        }

    .user-email {
        font-size: 0.85rem;
        color: var(--gray);
    }

    .user-joined {
        font-size: 0.8rem;
        color: var(--gray);
    }


    .user-search-container {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .users-section .search-box {
        min-width: 200px;
        margin-right: 0.5rem;
    }

    .users-section .view-all {
        white-space: nowrap;
    }
    /* ===== Responsive Styles ===== */
    media (max-width: 1200px) {
        .metrics-grid

    {
        grid-template-columns: repeat(2, 1fr);
    }

    }

    media (max-width: 768px) {
        .admin-dashboard

    {
        padding: 0 1rem 1.5rem;
    }

    .header-content {
        padding: 0 1rem;
    }

    .metrics-grid {
        grid-template-columns: 1fr;
    }

    .report-filters {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .search-box {
        max-width: 100%;
        width: 100%;
    }

    .users-grid {
        grid-template-columns: 1fr;
    }

    /* Adjust action buttons for smaller screens */
    .action-buttons {
        flex-direction: column;
        gap: 0.5rem;
    }

    .action-form {
        flex-direction: column;
    }

    }

    media (max-width: 576px) {
        .dashboard-title span

    {
        display: none;
    }

    .btn-logout span {
        display: none;
    }

    .filter-group {
        flex-direction: column;
        align-items: flex-start;
    }

    /* Make action buttons full width on very small screens */
    .btn-action {
        width: 100%;
        justify-content: center;
    }

    }
</style>

<style>
    /* User Role Badges */
    .user-role {
        padding: 0.25rem 0.5rem;
        border-radius: var(--border-radius-sm);
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: capitalize;
    }

        .user-role.admin {
            background-color: rgba(120, 0, 0, 0.1);
            color: var(--primary);
        }

        .user-role.staff {
            background-color: rgba(23, 162, 184, 0.1);
            color: var(--info);
        }

        .user-role.professor {
            background-color: rgba(255, 193, 7, 0.1);
            color: var(--warning);
        }

        .user-role.student {
            background-color: rgba(40, 167, 69, 0.1);
            color: var(--success);
        }

    /* Role Select Dropdown */
    .role-form {
        display: inline-block;
    }

    .role-select {
        padding: 0.5rem 1rem;
        border: 1px solid var(--gray-light);
        border-radius: var(--border-radius-sm);
        background-color: var(--white);
        cursor: pointer;
        transition: var(--transition);
        font-size: 0.9rem;
    }

        .role-select:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(120, 0, 0, 0.1);
        }

    /* Delete Button */
    .delete-btn {
        background-color: var(--danger);
    }

        .delete-btn:hover {
            background-color: #c82333;
        }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .action-buttons .action-text {
            display: none;
        }

        .user-display {
            flex-direction: column;
            align-items: flex-start;
        }

        .user-meta {
            margin-top: 0.25rem;
        }
    }
</style>

@section Scripts {
    <script>
                // Add to your existing script section
        $(document).ready(function() {
                    // Add this to your $(document).ready function
        $('.delete-form').submit(function(e) {
            if (!confirm('Are you sure you want to delete this report? This action cannot be undone.')) {
                e.preventDefault();
            }
        });
            // Logo preview functionality
            $('#logoFile').change(function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(event) {
                        $('#logoPreview').attr('src', event.target.result);
                        $('.logo-preview').removeClass('d-none');
                    }
                    reader.readAsDataURL(file);
                }
            });

                     $('#logoUploadForm').submit(function(e) {
            e.preventDefault();

            var form = $(this);
            var formData = new FormData(form[0]);

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function() {
                    $('button[type="submit"]').prop('disabled', true)
                        .html('<i class="fas fa-spinner fa-spin me-1"></i> Uploading...');
                },
                success: function(response) {
                    if (response && response.success) {
                        // Force browser to reload the image by changing the src
                        var newSrc = response.logoUrl;
                        $('#currentLogoPreview').attr('src', newSrc);

                        // Also update the login/register page logo reference
                        $('img[src*="/images/logo"]').each(function() {
                            var currentSrc = $(this).attr('src');
                            $(this).attr('src', currentSrc.split('?')[0] + '?v=' + Date.now());
                        });

                        showNotification('success', response.message);
                        $('#logoManagementModal').modal('hide');

                        // Reload the page
                        location.reload();
                    } else {
                        showNotification('error', response?.message || 'Upload failed');
                    }
                },
                error: function(xhr) {
                    var errorMsg = xhr.responseJSON?.message || xhr.statusText;
                    showNotification('error', 'Upload failed: ' + errorMsg);
                },
                complete: function() {
                    $('button[type="submit"]').prop('disabled', false)
                        .html('<i class="fas fa-upload me-1"></i> Upload Logo');
                }
            });
        });

        });
        $(document).ready(function() {
            // Initialize dashboard counts
            updateDashboardCounts();

            // Set up periodic refresh (every 30 seconds)
            setInterval(updateDashboardCounts, 30000);

            // Filter reports by status
            $('.filter-btn').click(function() {
                $('.filter-btn').removeClass('active');
                $(this).addClass('active');

                const status = $(this).data('status');
                if (status === 'all') {
                    $('.reports-table tbody tr').show();
                } else {
                    $('.reports-table tbody tr').hide();
                    $(`.reports-table tbody tr[data-status="${status}"]`).show();
                }
            });

            // Form submission handling
            $('form[action*="QuickAction"]').submit(function(e) {
                const action = $(this).find('button[type="submit"][clicked=true]').val();
                let message = '';

                switch(action) {
                    case 'accept':
                        message = 'Are you sure you want to accept this report?';
                        break;
                    case 'reject':
                        message = 'Are you sure you want to reject this report?';
                        break;
                    case 'complete':
                        message = 'Are you sure you want to mark this report as completed?';
                        break;
                }

                if (message && !confirm(message)) {
                    e.preventDefault();
                }
            });
                        // Handle the complete report form submission
        $('#completeReportForm').submit(function(e) {
            e.preventDefault(); // Prevent default form submission behavior

            var form = $(this);
            var submitBtn = form.find('button[type="submit"]');
            var originalText = submitBtn.html();

            // Validate required fields
            if ($('#completionNotes').val().trim() === '') {
                showNotification('error', 'Completion notes are required');
                return false;
            }

            if (!$('#completionImage').val()) {
                showNotification('error', 'Completion image is required');
                return false;
            }

            // Show loading state
            submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Completing...');

            var formData = new FormData(form[0]);

            $.ajax({
                url: '@Url.Action("CompleteReportWithDetails", "StaffDashboard")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        // Close the modal
                        $('#completeReportModal').modal('hide');

                        // Show success message
                        showNotification('success', response.message || 'Report marked as completed successfully');

                        // Refresh the page
                        setTimeout(function() {
                            location.reload();
                        }, 1500);
                    } else {
                        showNotification('error', response.message || 'Error completing report');
                    }
                },
                error: function(xhr, status, error) {
                    showNotification('error', 'An error occurred: ' + error);
                },
                complete: function() {
                    submitBtn.prop('disabled', false).html(originalText);
                }
            });
        });


            // Track which button was clicked
            $('form[action*="QuickAction"] button[type="submit"]').click(function() {
                $(this).siblings().removeAttr('clicked');
                $(this).attr('clicked', 'true');
            });

            // Close notifications
            $('.notification-close').click(function() {
                $(this).closest('.notification').fadeOut(200, function() {
                    $(this).remove();
                });
            });

            // Search functionality
            $('.search-box input').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                $('.reports-table tbody tr').each(function() {
                    const rowText = $(this).text().toLowerCase();
                    $(this).toggle(rowText.indexOf(searchTerm) > -1);
                });
            });
        });

        function updateDashboardCounts() {
            $.ajax({
                url: '/Dashboard/GetDashboardCounts',
                type: 'GET',
                beforeSend: function() {
                    $('.metric-card').addClass('counting');
                },
                success: function(data) {
                    if (data && data.totalUsers !== undefined) {
                        // Update counts with animation
                        animateCountChange('.total-users-count', data.totalUsers);
                        animateCountChange('.total-students-count', data.totalStudents);
                        animateCountChange('.total-professors-count', data.totalProfessors);
                        animateCountChange('.pending-reports-count', data.pendingReports);
                    } else {
                        console.error('Invalid data format:', data);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching dashboard counts:', error);
                },
                complete: function() {
                    $('.metric-card').removeClass('counting');
                }
            });
        }

        function animateCountChange(selector, newValue) {
            const element = $(selector);
            const current = parseInt(element.text()) || 0;
            const diff = newValue - current;

            if (diff !== 0) {
                element.prop('Counter', current).animate({
                    Counter: newValue
                }, {
                    duration: 500,
                    easing: 'swing',
                    step: function(now) {
                        element.text(Math.ceil(now));
                    }
                });
            }
        }

                // User search functionality
        $('#user-search').on('input', function() {
            const searchTerm = $(this).val().toLowerCase();
            $('.users-grid .user-card').each(function() {
                const searchData = $(this).data('search');
                $(this).toggle(searchData.includes(searchTerm));
            });
        });
         $('#completeReportModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var reportId = button.data('report-id'); // Extract info from data-* attributes
            var modal = $(this);
            modal.find('#reportIdToComplete').val(reportId);
        });

        // Handle the complete report form submission
       $('#completeReportForm').submit(function(e) {
    e.preventDefault(); // Prevent default form submission behavior

    var form = $(this);
    var submitBtn = form.find('button[type="submit"]');
    var originalText = submitBtn.html();

    // Validate required fields
    if ($('#completionNotes').val().trim() === '') {
        showNotification('error', 'Completion notes are required');
        return false;
    }

    if (!$('#completionImage').val()) {
        showNotification('error', 'Completion image is required');
        return false;
    }

    // Show loading state
    submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Completing...');

    var formData = new FormData(form[0]);

    $.ajax({
        url: '@Url.Action("CompleteReportWithDetails", "StaffDashboard")',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(response) {
            if (response.success) {
                // Close the modal
                $('#completeReportModal').modal('hide');

                // Show success message
                showNotification('success', response.message || 'Report marked as completed successfully');

                // Refresh the page
                setTimeout(function() {
                    location.reload();
                }, 1500);
            } else {
                showNotification('error', response.message || 'Error completing report');
            }
        },
        error: function(xhr, status, error) {
            showNotification('error', 'An error occurred: ' + error);
        },
        complete: function() {
            submitBtn.prop('disabled', false).html(originalText);
        }
    });
});

        function showNotification(type, message) {
            var icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
            var notification = $(
                '<div class="notification ' + type + '">' +
                '<i class="fas ' + icon + '"></i>' +
                '<span>' + message + '</span>' +
                '<button class="notification-close">&times;</button>' +
                '</div>'
            );

            $('.notification-container').append(notification);
            notification.hide().slideDown(200);

            // Auto-remove after 5 seconds
            setTimeout(function() {
                notification.slideUp(200, function() {
                    $(this).remove();
                });
            }, 5000);
        }
    </script>
}